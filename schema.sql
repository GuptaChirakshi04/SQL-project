/* Introduction to SQL 					*/
/* Script file for ORACLE  DBMS				*/
/* Script file loads all 28 tables				*/


CREATE TABLE DEPARTMENT (
DEPARTMENT_NAME     VARCHAR2(35) NOT NULL CHECK(DEPARTMENT_NAME IN ('FASHION DESIGN', 'FINANCE', 'HUMAN RESOURCES', 'INTERNATIONAL BUSINESS', 'IT', 'SALES AND MARKETING')),
DEPARTMENT_CODE     CHAR(4) NOT NULL CHECK(DEPARTMENT_CODE IN ('FD01', 'FN02', 'HR03', 'IB04', 'IT05', 'SM06')),
NUM_COURSES         INTEGER NOT NULL,
PRIMARY KEY (DEPARTMENT_NAME));


CREATE TABLE EMPLOYEES (
EMP_ID              VARCHAR2(10) NOT NULL,
EMP_NAME            VARCHAR2(35) NOT NULL,
EMP_DOB             DATE NOT NULL,
EMP_ADDRESS         VARCHAR2(40) NOT NULL,
EMP_CONTACT         CHAR(10) NOT NULL,
EMP_JOB_STATUS      VARCHAR2(25) NOT NULL CHECK(EMP_JOB_STATUS IN ('WORKING', 'ON LEAVE', 'NO SHIFT', 'OLD EMPLOYEE')),
EMP_JOINING_DATE    DATE NOT NULL,
EMP_TYPE            VARCHAR2(20) NOT NULL,
PRIMARY KEY (EMP_ID, EMP_NAME),
CONSTRAINT EMP_ID_U1 UNIQUE(EMP_ID));


CREATE TABLE MANAGEMENT_STAFF (
EMP_ID              VARCHAR2(10) NOT NULL,  
EMP_NAME            VARCHAR2(35) NOT NULL,            
EMP_DEPARTMENT      VARCHAR2(35) NOT NULL,
WORKING_TENURE      VARCHAR2(15) NOT NULL,
EMP_DESIGNATION     VARCHAR2(20) NOT NULL,
PRIMARY KEY (EMP_ID, EMP_DESIGNATION),
CONSTRAINT EMP_DES UNIQUE(EMP_DESIGNATION),
FOREIGN KEY (EMP_ID, EMP_NAME) REFERENCES EMPLOYEES(EMP_ID, EMP_NAME) ON DELETE SET NULL);


CREATE TABLE DESIGNATION (  
EMP_DESIGNATION             VARCHAR2(20) NOT NULL,
EMP_SALARY                  INTEGER NOT NULL,
SALARY_INCREMENT            INTEGER,
PRIMARY KEY (EMP_DESIGNATION),
FOREIGN KEY (EMP_DESIGNATION) REFERENCES MANAGEMENT_STAFF(EMP_DESIGNATION) ON DELETE SET NULL);


CREATE TABLE TEACHING_STAFF (
EMP_ID              VARCHAR2(10) NOT NULL,
EMP_NAME            VARCHAR2(35) NOT NULL,
WORKING_TENURE      VARCHAR2(15) NOT NULL,
EMP_DESIGNATION     VARCHAR2(20) NOT NULL CHECK(EMP_DESIGNATION IN ('PROFESSOR', 'ASSISTANT PROFESSOR', 'INTERN')),
PRIMARY KEY (EMP_ID, EMP_NAME), 
FOREIGN KEY (EMP_ID, EMP_NAME) REFERENCES EMPLOYEES(EMP_ID, EMP_NAME) ON DELETE SET NULL);


CREATE TABLE LECTURES (
LECT_NAME           VARCHAR2(35) NOT NULL,
LECT_DURATION       INTEGER, 
LECT_TIMINGS        VARCHAR2(20),
PRIMARY KEY (LECT_NAME));


CREATE TABLE PROFESSOR (
EMP_ID              VARCHAR2(10) NOT NULL,
EMP_NAME            VARCHAR2(35) NOT NULL,
DEPARTMENT_NAME     VARCHAR2(35) NOT NULL CHECK(DEPARTMENT_NAME IN ('FASHION DESIGN', 'FINANCE', 'HUMAN RESOURCES', 'INTERNATIONAL BUSINESS', 'IT', 'SALES AND MARKETING')),
LECTURE_NAME        VARCHAR2(35) NOT NULL,
NUM_ASST_PROF       INTEGER NOT NULL,
EMP_SALARY          INTEGER NOT NULL,
QUARTERLY_INCREMENT INTEGER,
PRIMARY KEY (EMP_ID, EMP_NAME),
FOREIGN KEY (EMP_ID, EMP_NAME) REFERENCES TEACHING_STAFF(EMP_ID, EMP_NAME) ON DELETE SET NULL,
CONSTRAINT PROF_ID UNIQUE(EMP_ID),
FOREIGN KEY (DEPARTMENT_NAME) REFERENCES DEPARTMENT(DEPARTMENT_NAME) ON DELETE SET NULL,
FOREIGN KEY (LECTURE_NAME) REFERENCES LECTURES(LECT_NAME) ON DELETE SET NULL);


CREATE TABLE ASSISTANT_PROFESSOR (
EMP_ID              VARCHAR2(10) NOT NULL,
EMP_NAME            VARCHAR2(35) NOT NULL,
DEPARTMENT_NAME     VARCHAR2(35) NOT NULL CHECK(DEPARTMENT_NAME IN ('FASHION DESIGN', 'FINANCE', 'HUMAN RESOURCES', 'INTERNATIONAL BUSINESS', 'IT', 'SALES AND MARKETING')),
REPORTS_TO_PROF_ID  VARCHAR2(10) NOT NULL,
EMP_SALARY          INTEGER NOT NULL,
YEARLY_INCREMENT    INTEGER,
PRIMARY KEY (EMP_ID, EMP_NAME),
FOREIGN KEY (EMP_ID, EMP_NAME) REFERENCES TEACHING_STAFF(EMP_ID, EMP_NAME) ON DELETE SET NULL,
CONSTRAINT A_PROF_ID UNIQUE(EMP_ID),
FOREIGN KEY (DEPARTMENT_NAME) REFERENCES DEPARTMENT(DEPARTMENT_NAME) ON DELETE SET NULL,
FOREIGN KEY (REPORTS_TO_PROF_ID) REFERENCES PROFESSOR(EMP_ID) ON DELETE SET NULL);


CREATE TABLE INTERN (
EMP_ID                  VARCHAR2(10) NOT NULL,
EMP_NAME                VARCHAR2(35) NOT NULL,
EMP_SALARY              INTEGER NOT NULL,
DEPARTMENT_NAME         VARCHAR2(35) NOT NULL CHECK(DEPARTMENT_NAME IN ('FASHION DESIGN', 'FINANCE', 'HUMAN RESOURCES', 'INTERNATIONAL BUSINESS', 'IT', 'SALES AND MARKETING')),
REPORTS_TO_ASST_PROF_ID VARCHAR2(10) NOT NULL,
PRIMARY KEY (EMP_ID, EMP_NAME),
FOREIGN KEY (EMP_ID, EMP_NAME) REFERENCES TEACHING_STAFF(EMP_ID, EMP_NAME) ON DELETE SET NULL,
FOREIGN KEY (DEPARTMENT_NAME) REFERENCES DEPARTMENT(DEPARTMENT_NAME) ON DELETE SET NULL,
FOREIGN KEY (REPORTS_TO_ASST_PROF_ID) REFERENCES ASSISTANT_PROFESSOR(EMP_ID) ON DELETE SET NULL);


CREATE TABLE HEAD_OF_DEPARTMENT (
EMP_ID                  VARCHAR2(10) NOT NULL,
EMP_NAME                VARCHAR2(35) NOT NULL,
DEPARTMENT_NAME         VARCHAR2(35) NOT NULL CHECK(DEPARTMENT_NAME IN ('FASHION DESIGN', 'FINANCE', 'HUMAN RESOURCES', 'INTERNATIONAL BUSINESS', 'IT', 'SALES AND MARKETING')),
WORKING_TENURE          VARCHAR2(15) NOT NULL,
EMP_SALARY              INTEGER NOT NULL,
QUARTERLY_INCREMENT     INTEGER,
NUM_PROF_REPORTING      INTEGER NOT NULL,
PRIMARY KEY (EMP_ID, DEPARTMENT_NAME),
FOREIGN KEY (DEPARTMENT_NAME) REFERENCES DEPARTMENT(DEPARTMENT_NAME) ON DELETE SET NULL);


CREATE TABLE PRINCIPAL (
P_NAME              VARCHAR2(35) NOT NULL,
P_DOB               DATE NOT NULL,
P_CONTACT           CHAR(10) NOT NULL,
WORKING_TENURE      VARCHAR2(15) NOT NULL,
PRIMARY KEY (P_NAME));


CREATE TABLE BRANCHES (
BRANCH_NAME             VARCHAR2(35) NOT NULL,
LOCATION                VARCHAR2(35) NOT NULL,
PRINCIPAL_NAME          VARCHAR2(35) NOT NULL,
NUM_COURSES             INTEGER NOT NULL,
PRIMARY KEY (BRANCH_NAME),
FOREIGN KEY (PRINCIPAL_NAME) REFERENCES PRINCIPAL(P_NAME) ON DELETE SET NULL);


CREATE TABLE COURSES (
COURSE_NAME             VARCHAR2(25) NOT NULL,
SPECIALISATION_NAME     VARCHAR2(35) NOT NULL,
BRANCH_NAME             VARCHAR2(35) NOT NULL,
FEES                    INTEGER NOT NULL,
DURATION                VARCHAR2(10) NOT NULL,
PLACEMENT_RATINGS       NUMBER,
ELIGIBILITY             VARCHAR2(35),
PRIMARY KEY (COURSE_NAME),
FOREIGN KEY (SPECIALISATION_NAME) REFERENCES DEPARTMENT(DEPARTMENT_NAME) ON DELETE SET NULL,
FOREIGN KEY (BRANCH_NAME) REFERENCES BRANCHES(BRANCH_NAME) ON DELETE SET NULL);


CREATE TABLE STUDENTS (
STUD_ID                     VARCHAR2(15) NOT NULL,
STUD_FULL_NAME              VARCHAR2(35) NOT NULL,
STUD_DOB                    DATE,
STUD_ADDRESS                VARCHAR2(35) NOT NULL,
STUD_COURSE_NAME            VARCHAR2(25) NOT NULL,
STUD_ACCOMMODATION_TYPE     VARCHAR2(10) NOT NULL CHECK(STUD_ACCOMMODATION_TYPE IN ('HOSTEL', 'OWN', 'OTHER')),
STUD_CONTACT                CHAR(10) NOT NULL,
STUD_EMERGENCY_NUM          CHAR(10) NOT NULL,         
PRIMARY KEY (STUD_ID),
FOREIGN KEY (STUD_COURSE_NAME) REFERENCES COURSES(COURSE_NAME) ON DELETE SET NULL);


CREATE TABLE STUDENT_LECTURES (
LECT_NAME           VARCHAR2(35) NOT NULL,
STUD_ID             VARCHAR2(15) NOT NULL,
PRIMARY KEY (LECT_NAME, STUD_ID),
FOREIGN KEY (LECT_NAME) REFERENCES LECTURES(LECT_NAME),
FOREIGN KEY (STUD_ID) REFERENCES STUDENTS(STUD_ID) ON DELETE SET NULL);


CREATE TABLE SERVICES (
SERVICE_NAME            VARCHAR2(35) NOT NULL,
MONTHLY_CHARGES         INTEGER NOT NULL,
AVAILABILITY_HOURS      VARCHAR2(10) NOT NULL,  
ADDITIONAL_COMMMENTS    VARCHAR2(40),
PRIMARY KEY (SERVICE_NAME));


CREATE TABLE BRANCH_SERVICE (
BRANCH_NAME         VARCHAR2(35) NOT NULL,
SERVICE_NAME        VARCHAR2(35) NOT NULL,
PRIMARY KEY (BRANCH_NAME, SERVICE_NAME),
FOREIGN KEY (BRANCH_NAME) REFERENCES BRANCHES(BRANCH_NAME) ON DELETE SET NULL,
FOREIGN KEY (SERVICE_NAME) REFERENCES SERVICES(SERVICE_NAME) ON DELETE SET NULL);


CREATE TABLE CHAIRMAN (
CM_INITIALS         CHAR(3) NOT NULL,
CM_NAME             VARCHAR2(35) NOT NULL,
CM_DOB              DATE NOT NULL,
CM_ADDRESS          VARCHAR2(40) NOT NULL,
CM_CONTACT_NUM      CHAR(10) NOT NULL,
PRIMARY KEY (CM_INITIALS, CM_NAME));


CREATE TABLE DIRECTORS (
DIRECTOR_INITIALS   CHAR(3) NOT NULL,
DIRECTOR_NAME       VARCHAR2(35) NOT NULL,
WORKING_TENURE      VARCHAR2(15) NOT NULL,
INCOME              INTEGER,
REPORTED_BY         VARCHAR(25) NOT NULL CHECK(REPORTED_BY IN ('FINANCE DEPARTMENT', 'MARKETING DEPARTMENT')),
DIRECTOR_TYPE       VARCHAR(20) NOT NULL CHECK(DIRECTOR_TYPE IN ('MANAGING DIRECTOR', 'MARKETING DIRECTOR')),
PRIMARY KEY (DIRECTOR_INITIALS, DIRECTOR_NAME));


CREATE TABLE MARKETING_DEPARTMENT (
MONTH_YEAR              VARCHAR2(15) NOT NULL,
REPORT_ID               CHAR(10) NOT NULL,
ADVERTISING_COSTS       INTEGER NOT NULL,
ADVERTISING_PROFITS     INTEGER NOT NULL,
PRIMARY KEY (MONTH_YEAR, REPORT_ID),
CONSTRAINT MAR_REP UNIQUE(REPORT_ID));


CREATE TABLE FINANCE_DEPARTMENT (
MONTH_YEAR      VARCHAR2(15) NOT NULL,
REPORT_ID       CHAR(10) NOT NULL,
TURN_OVER       INTEGER NOT NULL,
PENDING_PAYMENT INTEGER NOT NULL,
LIABILITIES     INTEGER NOT NULL,
ASSETS          INTEGER NOT NULL,
TAXES           INTEGER NOT NULL,
EQUITY          INTEGER NOT NULL,
PRIMARY KEY (MONTH_YEAR, REPORT_ID),
CONSTRAINT FIN_REP UNIQUE(REPORT_ID));


CREATE TABLE HOSTEL (
MONTH_YEAR          VARCHAR2(15) NOT NULL,
HOSTEL_NUM          CHAR(3) NOT NULL,
NUM_ROOM_AVAIL      INTEGER NOT NULL,
ROOM_TYPE           VARCHAR2(10) NOT NULL CHECK(ROOM_TYPE IN ('SINGLE', 'DOUBLE', 'TRIPLE')),
FEE_PER_ROOM        INTEGER NOT NULL,
PRIMARY KEY (MONTH_YEAR, HOSTEL_NUM));


CREATE TABLE RECEPTION (
MONTH_YEAR          VARCHAR2(15) NOT NULL,
REPORT_ID           CHAR(10) NOT NULL,
NUM_APPLICANTS      INTEGER NOT NULL,
NUM_ENQUIRIES       INTEGER NOT NULL,
NUM_NOTICES         INTEGER NOT NULL,
PRIMARY KEY (MONTH_YEAR, REPORT_ID),
CONSTRAINT REC_REP UNIQUE(REPORT_ID));


CREATE TABLE ACCOUNTS_DEPARTMENT (
MONTH_YEAR          VARCHAR2(15) NOT NULL,
REPORT_ID           CHAR(10) NOT NULL,
SCHOLARSHIPS        INTEGER NOT NULL,
EXPENSES            INTEGER NOT NULL,
SERVICE_CHARGES     INTEGER,
EVENT_TOUR_COSTS    INTEGER,
SALARIES_PAID       INTEGER NOT NULL,
FEE_RECEIVED        INTEGER NOT NULL,
PRIMARY KEY (MONTH_YEAR, REPORT_ID),
CONSTRAINT ACC_REP UNIQUE(REPORT_ID));


CREATE TABLE APPLICANT_DATA (
APPLICATION_NUM             CHAR(12) NOT NULL,
APPLICANT_FULL_NAME         VARCHAR2(35) NOT NULL,
APPLICANT_ADDRESS           VARCHAR2(40) NOT NULL,
APPLICANT_DOB               DATE,
APPLICANT_CONTACT           CHAR(10) NOT NULL,
APPLICANT_COURSE            VARCHAR2(25) NOT NULL,
APPLICANT_QUALIFICATIONS    VARCHAR2(35) NOT NULL,
DATE_OF_APPLYING            DATE,
PRIMARY KEY (APPLICATION_NUM));


CREATE TABLE ADMIN (
MONTH_YEAR              VARCHAR2(15) NOT NULL,
INTERVIEWS_TAKEN        INTEGER NOT NULL,
NEW_ADMISSIONS          INTEGER NOT NULL,
REJECTED_APPLICATIONS   INTEGER NOT NULL,
LAST_WEBSITE_UPDATE     DATE NOT NULL,
PRIMARY KEY (MONTH_YEAR));


CREATE TABLE EVENTS_DEPARTMENT (
MONTH_YEAR              VARCHAR2(15) NOT NULL,
REPORT_ID               CHAR(10) NOT NULL,
ACAD_EVENTS             INTEGER NOT NULL,
EXTRA_EVENTS            INTEGER NOT NULL,
TOTAL_COSTS             INTEGER NOT NULL,
PRIMARY KEY (MONTH_YEAR, REPORT_ID),
CONSTRAINT EVE_REP UNIQUE(REPORT_ID));


CREATE TABLE MONTHLY_REPORTS (
MONTH_YEAR              VARCHAR2(15) NOT NULL,
FINANCE_REPORT_ID       CHAR(10) NOT NULL,
EVENTS_REPORT_ID        CHAR(10) NOT NULL,
ACC_REPORT_ID           CHAR(10) NOT NULL,
MARKT_REPORT_ID         CHAR(10) NOT NULL,
RECEP_REPORT_ID         CHAR(10) NOT NULL,
PRIMARY KEY (MONTH_YEAR, FINANCE_REPORT_ID, EVENTS_REPORT_ID, ACC_REPORT_ID, MARKT_REPORT_ID, RECEP_REPORT_ID),
FOREIGN KEY (FINANCE_REPORT_ID) REFERENCES FINANCE_DEPARTMENT(REPORT_ID) ON DELETE SET NULL,
FOREIGN KEY (EVENTS_REPORT_ID) REFERENCES EVENTS_DEPARTMENT(REPORT_ID) ON DELETE SET NULL,
FOREIGN KEY (ACC_REPORT_ID) REFERENCES ACCOUNTS_DEPARTMENT(REPORT_ID) ON DELETE SET NULL,
FOREIGN KEY (MARKT_REPORT_ID) REFERENCES MARKETING_DEPARTMENT(REPORT_ID) ON DELETE SET NULL,
FOREIGN KEY (RECEP_REPORT_ID) REFERENCES RECEPTION(REPORT_ID) ON DELETE SET NULL);